#!/usr/bin/env bash
set -eu -o pipefail
set -x

main() {
	echo $SHELL
	echo $PWD
	echo $PATH
	if command -v kerl 2&>/dev/null; then
		echo "KERL already seems to be available."
	else
		echo "Downloading and installing kerl..."
		install_kerl
	fi

	# NOTE: I'm not bothering with 19.3 because of the PITA around openssl versions there
	ensure_release "21.1" "std-21-1"
}

install_kerl() {
	local -r kerl_dir="$HOME/.local/bin"
	local -r kerl="${kerl_dir}/kerl"

	mkdir -p "${kerl_dir}"
	curl -Llsso "$kerl" "https://raw.githubusercontent.com/kerl/kerl/1.8.5/kerl"

	chmod +x "$kerl"
}

ensure_release() {
	local -r version=${1}
	local -r build_name=${2}

	if (kerl list builds | grep "$build_name"); then
		echo "Erlang build ${build_name} already built."
	else
		echo "Building ${build_name}..."
		kerl build "${version}" "$build_name"
	fi

	if [ -d  "$HOME/.local/opt/erlang-$build_name" ]; then
		echo "Build already installed."
	else
		echo "Installing build..."
		KERL_INSTALL_MANPAGES=yes kerl install "$build_name" "$HOME/.local/opt/erlang-$build_name"
	fi
}

main
